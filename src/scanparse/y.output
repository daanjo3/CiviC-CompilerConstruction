Terminals unused in grammar

   COMMENT_SINGLE
   COMMENT_MULT


State 176 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declarations

    2 declarations: declaration declarations
    3             | declaration

    4 declaration: fundefdec
    5            | globaldec
    6            | globaldef

    7 fundefdec: EXPORT type ID BRACKET_L BRACKET_R BRACE_L funbody BRACE_R
    8          | EXPORT type ID BRACKET_L BRACKET_R param BRACE_L funbody BRACE_R
    9          | type ID BRACKET_L BRACKET_R BRACE_L funbody BRACE_R
   10          | type ID BRACKET_L param BRACKET_R BRACE_L funbody BRACE_R
   11          | EXTERN type ID BRACKET_L BRACKET_R SEMICOLON
   12          | EXTERN type ID BRACKET_L param BRACKET_R SEMICOLON

   13 globaldec: EXTERN type ID SEMICOLON

   14 globaldef: EXPORT type ID LET expr SEMICOLON
   15          | EXPORT type ID SEMICOLON
   16          | type ID LET expr SEMICOLON
   17          | type ID SEMICOLON

   18 param: type var COMMA param
   19      | type var

   20 type: TYPE_INT
   21     | TYPE_FLOAT
   22     | TYPE_BOOL
   23     | TYPE_VOID

   24 funbody: vardecs localfundefs statements
   25        | vardecs localfundefs
   26        | vardecs statements
   27        | localfundefs statements
   28        | vardecs
   29        | localfundefs
   30        | statements

   31 vardecs: vardecs type ID LET expr SEMICOLON
   32        | vardecs type ID SEMICOLON
   33        | type ID LET expr SEMICOLON
   34        | type ID SEMICOLON

   35 localfundefs: fundefdec localfundefs
   36             | fundefdec

   37 statements: stmt statements
   38           | stmt

   39 stmt: ID LET expr SEMICOLON
   40     | funcall SEMICOLON
   41     | WHILE BRACKET_L expr BRACKET_R block
   42     | DO block WHILE BRACKET_L expr BRACKET_R SEMICOLON
   43     | if
   44     | for
   45     | RETURN expr SEMICOLON
   46     | RETURN SEMICOLON

   47 for: FOR BRACKET_L TYPE_INT ID LET expr COMMA expr COMMA expr BRACKET_R block
   48    | FOR BRACKET_L TYPE_INT ID LET expr COMMA expr BRACKET_R block

   49 if: IF BRACKET_L expr BRACKET_R block ELSE block
   50   | IF BRACKET_L expr BRACKET_R block

   51 block: BRACE_L statements BRACE_R
   52      | stmt

   53 exprs: expr COMMA exprs
   54      | expr

   55 expr: BRACKET_L expr BRACKET_R
   56     | binop
   57     | monop
   58     | cast
   59     | var
   60     | funcall
   61     | FLOAT
   62     | NUM
   63     | TRUEVAL
   64     | FALSEVAL

   65 cast: BRACKET_L type BRACKET_R expr

   66 funcall: ID BRACKET_L BRACKET_R
   67        | ID BRACKET_L exprs BRACKET_R

   68 monop: MINUS expr
   69      | NOT expr

   70 binop: expr PLUS expr
   71      | expr MINUS expr
   72      | expr STAR expr
   73      | expr SLASH expr
   74      | expr PERCENT expr
   75      | expr LE expr
   76      | expr LT expr
   77      | expr GE expr
   78      | expr GT expr
   79      | expr EQ expr
   80      | expr NE expr
   81      | expr OR expr
   82      | expr AND expr

   83 var: ID


Terminals, with rules where they appear

$end (0) 0
error (256)
TYPE_BOOL (258) 22
TYPE_INT (259) 20 47 48
TYPE_VOID (260) 23
TYPE_FLOAT (261) 21
BRACKET_L (262) 7 8 9 10 11 12 41 42 47 48 49 50 55 65 66 67
BRACKET_R (263) 7 8 9 10 11 12 41 42 47 48 49 50 55 65 66 67
BRACE_L (264) 7 8 9 10 51
BRACE_R (265) 7 8 9 10 51
COMMA (266) 18 47 48 53
SEMICOLON (267) 11 12 13 14 15 16 17 31 32 33 34 39 40 42 45 46
MINUS (268) 68 71
PLUS (269) 70
STAR (270) 72
SLASH (271) 73
PERCENT (272) 74
LE (273) 75
LT (274) 76
GE (275) 77
GT (276) 78
EQ (277) 79
NE (278) 80
AND (279) 82
OR (280) 81
NOT (281) 69
LET (282) 14 16 31 33 39 47 48
DO (283) 42
WHILE (284) 41 42
FOR (285) 47 48
IF (286) 49 50
ELSE (287) 49
RETURN (288) 45 46
EXTERN (289) 11 12 13
EXPORT (290) 7 8 14 15
TRUEVAL (291) 63
FALSEVAL (292) 64
COMMENT_SINGLE (293)
COMMENT_MULT (294)
NUM (295) 62
FLOAT (296) 61
ID (297) 7 8 9 10 11 12 13 14 15 16 17 31 32 33 34 39 47 48 66 67 83


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
declarations (45)
    on left: 2 3, on right: 1 2
declaration (46)
    on left: 4 5 6, on right: 2 3
fundefdec (47)
    on left: 7 8 9 10 11 12, on right: 4 35 36
globaldec (48)
    on left: 13, on right: 5
globaldef (49)
    on left: 14 15 16 17, on right: 6
param (50)
    on left: 18 19, on right: 8 10 12 18
type (51)
    on left: 20 21 22 23, on right: 7 8 9 10 11 12 13 14 15 16 17 18
    19 31 32 33 34 65
funbody (52)
    on left: 24 25 26 27 28 29 30, on right: 7 8 9 10
vardecs (53)
    on left: 31 32 33 34, on right: 24 25 26 28 31 32
localfundefs (54)
    on left: 35 36, on right: 24 25 27 29 35
statements (55)
    on left: 37 38, on right: 24 26 27 30 37 51
stmt (56)
    on left: 39 40 41 42 43 44 45 46, on right: 37 38 52
for (57)
    on left: 47 48, on right: 44
if (58)
    on left: 49 50, on right: 43
block (59)
    on left: 51 52, on right: 41 42 47 48 49 50
exprs (60)
    on left: 53 54, on right: 53 67
expr (61)
    on left: 55 56 57 58 59 60 61 62 63 64, on right: 14 16 31 33 39
    41 42 45 47 48 49 50 53 54 55 65 68 69 70 71 72 73 74 75 76 77
    78 79 80 81 82
cast (62)
    on left: 65, on right: 58
funcall (63)
    on left: 66 67, on right: 40 60
monop (64)
    on left: 68 69, on right: 57
binop (65)
    on left: 70 71 72 73 74 75 76 77 78 79 80 81 82, on right: 56
var (66)
    on left: 83, on right: 18 19 59


State 0

    0 $accept: . program $end

    TYPE_BOOL   shift, and go to state 1
    TYPE_INT    shift, and go to state 2
    TYPE_VOID   shift, and go to state 3
    TYPE_FLOAT  shift, and go to state 4
    EXTERN      shift, and go to state 5
    EXPORT      shift, and go to state 6

    program       go to state 7
    declarations  go to state 8
    declaration   go to state 9
    fundefdec     go to state 10
    globaldec     go to state 11
    globaldef     go to state 12
    type          go to state 13


State 1

   22 type: TYPE_BOOL .

    $default  reduce using rule 22 (type)


State 2

   20 type: TYPE_INT .

    $default  reduce using rule 20 (type)


State 3

   23 type: TYPE_VOID .

    $default  reduce using rule 23 (type)


State 4

   21 type: TYPE_FLOAT .

    $default  reduce using rule 21 (type)


State 5

   11 fundefdec: EXTERN . type ID BRACKET_L BRACKET_R SEMICOLON
   12          | EXTERN . type ID BRACKET_L param BRACKET_R SEMICOLON
   13 globaldec: EXTERN . type ID SEMICOLON

    TYPE_BOOL   shift, and go to state 1
    TYPE_INT    shift, and go to state 2
    TYPE_VOID   shift, and go to state 3
    TYPE_FLOAT  shift, and go to state 4

    type  go to state 14


State 6

    7 fundefdec: EXPORT . type ID BRACKET_L BRACKET_R BRACE_L funbody BRACE_R
    8          | EXPORT . type ID BRACKET_L BRACKET_R param BRACE_L funbody BRACE_R
   14 globaldef: EXPORT . type ID LET expr SEMICOLON
   15          | EXPORT . type ID SEMICOLON

    TYPE_BOOL   shift, and go to state 1
    TYPE_INT    shift, and go to state 2
    TYPE_VOID   shift, and go to state 3
    TYPE_FLOAT  shift, and go to state 4

    type  go to state 15


State 7

    0 $accept: program . $end

    $end  shift, and go to state 16


State 8

    1 program: declarations .

    $default  reduce using rule 1 (program)


State 9

    2 declarations: declaration . declarations
    3             | declaration .

    TYPE_BOOL   shift, and go to state 1
    TYPE_INT    shift, and go to state 2
    TYPE_VOID   shift, and go to state 3
    TYPE_FLOAT  shift, and go to state 4
    EXTERN      shift, and go to state 5
    EXPORT      shift, and go to state 6

    $default  reduce using rule 3 (declarations)

    declarations  go to state 17
    declaration   go to state 9
    fundefdec     go to state 10
    globaldec     go to state 11
    globaldef     go to state 12
    type          go to state 13


State 10

    4 declaration: fundefdec .

    $default  reduce using rule 4 (declaration)


State 11

    5 declaration: globaldec .

    $default  reduce using rule 5 (declaration)


State 12

    6 declaration: globaldef .

    $default  reduce using rule 6 (declaration)


State 13

    9 fundefdec: type . ID BRACKET_L BRACKET_R BRACE_L funbody BRACE_R
   10          | type . ID BRACKET_L param BRACKET_R BRACE_L funbody BRACE_R
   16 globaldef: type . ID LET expr SEMICOLON
   17          | type . ID SEMICOLON

    ID  shift, and go to state 18


State 14

   11 fundefdec: EXTERN type . ID BRACKET_L BRACKET_R SEMICOLON
   12          | EXTERN type . ID BRACKET_L param BRACKET_R SEMICOLON
   13 globaldec: EXTERN type . ID SEMICOLON

    ID  shift, and go to state 19


State 15

    7 fundefdec: EXPORT type . ID BRACKET_L BRACKET_R BRACE_L funbody BRACE_R
    8          | EXPORT type . ID BRACKET_L BRACKET_R param BRACE_L funbody BRACE_R
   14 globaldef: EXPORT type . ID LET expr SEMICOLON
   15          | EXPORT type . ID SEMICOLON

    ID  shift, and go to state 20


State 16

    0 $accept: program $end .

    $default  accept


State 17

    2 declarations: declaration declarations .

    $default  reduce using rule 2 (declarations)


State 18

    9 fundefdec: type ID . BRACKET_L BRACKET_R BRACE_L funbody BRACE_R
   10          | type ID . BRACKET_L param BRACKET_R BRACE_L funbody BRACE_R
   16 globaldef: type ID . LET expr SEMICOLON
   17          | type ID . SEMICOLON

    BRACKET_L  shift, and go to state 21
    SEMICOLON  shift, and go to state 22
    LET        shift, and go to state 23


State 19

   11 fundefdec: EXTERN type ID . BRACKET_L BRACKET_R SEMICOLON
   12          | EXTERN type ID . BRACKET_L param BRACKET_R SEMICOLON
   13 globaldec: EXTERN type ID . SEMICOLON

    BRACKET_L  shift, and go to state 24
    SEMICOLON  shift, and go to state 25


State 20

    7 fundefdec: EXPORT type ID . BRACKET_L BRACKET_R BRACE_L funbody BRACE_R
    8          | EXPORT type ID . BRACKET_L BRACKET_R param BRACE_L funbody BRACE_R
   14 globaldef: EXPORT type ID . LET expr SEMICOLON
   15          | EXPORT type ID . SEMICOLON

    BRACKET_L  shift, and go to state 26
    SEMICOLON  shift, and go to state 27
    LET        shift, and go to state 28


State 21

    9 fundefdec: type ID BRACKET_L . BRACKET_R BRACE_L funbody BRACE_R
   10          | type ID BRACKET_L . param BRACKET_R BRACE_L funbody BRACE_R

    TYPE_BOOL   shift, and go to state 1
    TYPE_INT    shift, and go to state 2
    TYPE_VOID   shift, and go to state 3
    TYPE_FLOAT  shift, and go to state 4
    BRACKET_R   shift, and go to state 29

    param  go to state 30
    type   go to state 31


State 22

   17 globaldef: type ID SEMICOLON .

    $default  reduce using rule 17 (globaldef)


State 23

   16 globaldef: type ID LET . expr SEMICOLON

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 40
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 24

   11 fundefdec: EXTERN type ID BRACKET_L . BRACKET_R SEMICOLON
   12          | EXTERN type ID BRACKET_L . param BRACKET_R SEMICOLON

    TYPE_BOOL   shift, and go to state 1
    TYPE_INT    shift, and go to state 2
    TYPE_VOID   shift, and go to state 3
    TYPE_FLOAT  shift, and go to state 4
    BRACKET_R   shift, and go to state 46

    param  go to state 47
    type   go to state 31


State 25

   13 globaldec: EXTERN type ID SEMICOLON .

    $default  reduce using rule 13 (globaldec)


State 26

    7 fundefdec: EXPORT type ID BRACKET_L . BRACKET_R BRACE_L funbody BRACE_R
    8          | EXPORT type ID BRACKET_L . BRACKET_R param BRACE_L funbody BRACE_R

    BRACKET_R  shift, and go to state 48


State 27

   15 globaldef: EXPORT type ID SEMICOLON .

    $default  reduce using rule 15 (globaldef)


State 28

   14 globaldef: EXPORT type ID LET . expr SEMICOLON

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 49
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 29

    9 fundefdec: type ID BRACKET_L BRACKET_R . BRACE_L funbody BRACE_R

    BRACE_L  shift, and go to state 50


State 30

   10 fundefdec: type ID BRACKET_L param . BRACKET_R BRACE_L funbody BRACE_R

    BRACKET_R  shift, and go to state 51


State 31

   18 param: type . var COMMA param
   19      | type . var

    ID  shift, and go to state 52

    var  go to state 53


State 32

   55 expr: BRACKET_L . expr BRACKET_R
   65 cast: BRACKET_L . type BRACKET_R expr

    TYPE_BOOL   shift, and go to state 1
    TYPE_INT    shift, and go to state 2
    TYPE_VOID   shift, and go to state 3
    TYPE_FLOAT  shift, and go to state 4
    BRACKET_L   shift, and go to state 32
    MINUS       shift, and go to state 33
    NOT         shift, and go to state 34
    TRUEVAL     shift, and go to state 35
    FALSEVAL    shift, and go to state 36
    NUM         shift, and go to state 37
    FLOAT       shift, and go to state 38
    ID          shift, and go to state 39

    type     go to state 54
    expr     go to state 55
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 33

   68 monop: MINUS . expr

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 56
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 34

   69 monop: NOT . expr

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 57
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 35

   63 expr: TRUEVAL .

    $default  reduce using rule 63 (expr)


State 36

   64 expr: FALSEVAL .

    $default  reduce using rule 64 (expr)


State 37

   62 expr: NUM .

    $default  reduce using rule 62 (expr)


State 38

   61 expr: FLOAT .

    $default  reduce using rule 61 (expr)


State 39

   66 funcall: ID . BRACKET_L BRACKET_R
   67        | ID . BRACKET_L exprs BRACKET_R
   83 var: ID .

    BRACKET_L  shift, and go to state 58

    $default  reduce using rule 83 (var)


State 40

   16 globaldef: type ID LET expr . SEMICOLON
   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    SEMICOLON  shift, and go to state 59
    MINUS      shift, and go to state 60
    PLUS       shift, and go to state 61
    STAR       shift, and go to state 62
    SLASH      shift, and go to state 63
    PERCENT    shift, and go to state 64
    LE         shift, and go to state 65
    LT         shift, and go to state 66
    GE         shift, and go to state 67
    GT         shift, and go to state 68
    EQ         shift, and go to state 69
    NE         shift, and go to state 70
    AND        shift, and go to state 71
    OR         shift, and go to state 72


State 41

   58 expr: cast .

    $default  reduce using rule 58 (expr)


State 42

   60 expr: funcall .

    $default  reduce using rule 60 (expr)


State 43

   57 expr: monop .

    $default  reduce using rule 57 (expr)


State 44

   56 expr: binop .

    $default  reduce using rule 56 (expr)


State 45

   59 expr: var .

    $default  reduce using rule 59 (expr)


State 46

   11 fundefdec: EXTERN type ID BRACKET_L BRACKET_R . SEMICOLON

    SEMICOLON  shift, and go to state 73


State 47

   12 fundefdec: EXTERN type ID BRACKET_L param . BRACKET_R SEMICOLON

    BRACKET_R  shift, and go to state 74


State 48

    7 fundefdec: EXPORT type ID BRACKET_L BRACKET_R . BRACE_L funbody BRACE_R
    8          | EXPORT type ID BRACKET_L BRACKET_R . param BRACE_L funbody BRACE_R

    TYPE_BOOL   shift, and go to state 1
    TYPE_INT    shift, and go to state 2
    TYPE_VOID   shift, and go to state 3
    TYPE_FLOAT  shift, and go to state 4
    BRACE_L     shift, and go to state 75

    param  go to state 76
    type   go to state 31


State 49

   14 globaldef: EXPORT type ID LET expr . SEMICOLON
   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    SEMICOLON  shift, and go to state 77
    MINUS      shift, and go to state 60
    PLUS       shift, and go to state 61
    STAR       shift, and go to state 62
    SLASH      shift, and go to state 63
    PERCENT    shift, and go to state 64
    LE         shift, and go to state 65
    LT         shift, and go to state 66
    GE         shift, and go to state 67
    GT         shift, and go to state 68
    EQ         shift, and go to state 69
    NE         shift, and go to state 70
    AND        shift, and go to state 71
    OR         shift, and go to state 72


State 50

    9 fundefdec: type ID BRACKET_L BRACKET_R BRACE_L . funbody BRACE_R

    TYPE_BOOL   shift, and go to state 1
    TYPE_INT    shift, and go to state 2
    TYPE_VOID   shift, and go to state 3
    TYPE_FLOAT  shift, and go to state 4
    DO          shift, and go to state 78
    WHILE       shift, and go to state 79
    FOR         shift, and go to state 80
    IF          shift, and go to state 81
    RETURN      shift, and go to state 82
    EXTERN      shift, and go to state 83
    EXPORT      shift, and go to state 84
    ID          shift, and go to state 85

    fundefdec     go to state 86
    type          go to state 87
    funbody       go to state 88
    vardecs       go to state 89
    localfundefs  go to state 90
    statements    go to state 91
    stmt          go to state 92
    for           go to state 93
    if            go to state 94
    funcall       go to state 95


State 51

   10 fundefdec: type ID BRACKET_L param BRACKET_R . BRACE_L funbody BRACE_R

    BRACE_L  shift, and go to state 96


State 52

   83 var: ID .

    $default  reduce using rule 83 (var)


State 53

   18 param: type var . COMMA param
   19      | type var .

    COMMA  shift, and go to state 97

    $default  reduce using rule 19 (param)


State 54

   65 cast: BRACKET_L type . BRACKET_R expr

    BRACKET_R  shift, and go to state 98


State 55

   55 expr: BRACKET_L expr . BRACKET_R
   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    BRACKET_R  shift, and go to state 99
    MINUS      shift, and go to state 60
    PLUS       shift, and go to state 61
    STAR       shift, and go to state 62
    SLASH      shift, and go to state 63
    PERCENT    shift, and go to state 64
    LE         shift, and go to state 65
    LT         shift, and go to state 66
    GE         shift, and go to state 67
    GT         shift, and go to state 68
    EQ         shift, and go to state 69
    NE         shift, and go to state 70
    AND        shift, and go to state 71
    OR         shift, and go to state 72


State 56

   68 monop: MINUS expr .
   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    $default  reduce using rule 68 (monop)


State 57

   69 monop: NOT expr .
   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    $default  reduce using rule 69 (monop)


State 58

   66 funcall: ID BRACKET_L . BRACKET_R
   67        | ID BRACKET_L . exprs BRACKET_R

    BRACKET_L  shift, and go to state 32
    BRACKET_R  shift, and go to state 100
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    exprs    go to state 101
    expr     go to state 102
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 59

   16 globaldef: type ID LET expr SEMICOLON .

    $default  reduce using rule 16 (globaldef)


State 60

   71 binop: expr MINUS . expr

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 103
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 61

   70 binop: expr PLUS . expr

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 104
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 62

   72 binop: expr STAR . expr

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 105
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 63

   73 binop: expr SLASH . expr

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 106
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 64

   74 binop: expr PERCENT . expr

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 107
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 65

   75 binop: expr LE . expr

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 108
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 66

   76 binop: expr LT . expr

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 109
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 67

   77 binop: expr GE . expr

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 110
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 68

   78 binop: expr GT . expr

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 111
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 69

   79 binop: expr EQ . expr

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 112
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 70

   80 binop: expr NE . expr

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 113
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 71

   82 binop: expr AND . expr

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 114
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 72

   81 binop: expr OR . expr

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 115
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 73

   11 fundefdec: EXTERN type ID BRACKET_L BRACKET_R SEMICOLON .

    $default  reduce using rule 11 (fundefdec)


State 74

   12 fundefdec: EXTERN type ID BRACKET_L param BRACKET_R . SEMICOLON

    SEMICOLON  shift, and go to state 116


State 75

    7 fundefdec: EXPORT type ID BRACKET_L BRACKET_R BRACE_L . funbody BRACE_R

    TYPE_BOOL   shift, and go to state 1
    TYPE_INT    shift, and go to state 2
    TYPE_VOID   shift, and go to state 3
    TYPE_FLOAT  shift, and go to state 4
    DO          shift, and go to state 78
    WHILE       shift, and go to state 79
    FOR         shift, and go to state 80
    IF          shift, and go to state 81
    RETURN      shift, and go to state 82
    EXTERN      shift, and go to state 83
    EXPORT      shift, and go to state 84
    ID          shift, and go to state 85

    fundefdec     go to state 86
    type          go to state 87
    funbody       go to state 117
    vardecs       go to state 89
    localfundefs  go to state 90
    statements    go to state 91
    stmt          go to state 92
    for           go to state 93
    if            go to state 94
    funcall       go to state 95


State 76

    8 fundefdec: EXPORT type ID BRACKET_L BRACKET_R param . BRACE_L funbody BRACE_R

    BRACE_L  shift, and go to state 118


State 77

   14 globaldef: EXPORT type ID LET expr SEMICOLON .

    $default  reduce using rule 14 (globaldef)


State 78

   42 stmt: DO . block WHILE BRACKET_L expr BRACKET_R SEMICOLON

    BRACE_L  shift, and go to state 119
    DO       shift, and go to state 78
    WHILE    shift, and go to state 79
    FOR      shift, and go to state 80
    IF       shift, and go to state 81
    RETURN   shift, and go to state 82
    ID       shift, and go to state 85

    stmt     go to state 120
    for      go to state 93
    if       go to state 94
    block    go to state 121
    funcall  go to state 95


State 79

   41 stmt: WHILE . BRACKET_L expr BRACKET_R block

    BRACKET_L  shift, and go to state 122


State 80

   47 for: FOR . BRACKET_L TYPE_INT ID LET expr COMMA expr COMMA expr BRACKET_R block
   48    | FOR . BRACKET_L TYPE_INT ID LET expr COMMA expr BRACKET_R block

    BRACKET_L  shift, and go to state 123


State 81

   49 if: IF . BRACKET_L expr BRACKET_R block ELSE block
   50   | IF . BRACKET_L expr BRACKET_R block

    BRACKET_L  shift, and go to state 124


State 82

   45 stmt: RETURN . expr SEMICOLON
   46     | RETURN . SEMICOLON

    BRACKET_L  shift, and go to state 32
    SEMICOLON  shift, and go to state 125
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 126
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 83

   11 fundefdec: EXTERN . type ID BRACKET_L BRACKET_R SEMICOLON
   12          | EXTERN . type ID BRACKET_L param BRACKET_R SEMICOLON

    TYPE_BOOL   shift, and go to state 1
    TYPE_INT    shift, and go to state 2
    TYPE_VOID   shift, and go to state 3
    TYPE_FLOAT  shift, and go to state 4

    type  go to state 127


State 84

    7 fundefdec: EXPORT . type ID BRACKET_L BRACKET_R BRACE_L funbody BRACE_R
    8          | EXPORT . type ID BRACKET_L BRACKET_R param BRACE_L funbody BRACE_R

    TYPE_BOOL   shift, and go to state 1
    TYPE_INT    shift, and go to state 2
    TYPE_VOID   shift, and go to state 3
    TYPE_FLOAT  shift, and go to state 4

    type  go to state 128


State 85

   39 stmt: ID . LET expr SEMICOLON
   66 funcall: ID . BRACKET_L BRACKET_R
   67        | ID . BRACKET_L exprs BRACKET_R

    BRACKET_L  shift, and go to state 58
    LET        shift, and go to state 129


State 86

   35 localfundefs: fundefdec . localfundefs
   36             | fundefdec .

    TYPE_BOOL   shift, and go to state 1
    TYPE_INT    shift, and go to state 2
    TYPE_VOID   shift, and go to state 3
    TYPE_FLOAT  shift, and go to state 4
    EXTERN      shift, and go to state 83
    EXPORT      shift, and go to state 84

    $default  reduce using rule 36 (localfundefs)

    fundefdec     go to state 86
    type          go to state 130
    localfundefs  go to state 131


State 87

    9 fundefdec: type . ID BRACKET_L BRACKET_R BRACE_L funbody BRACE_R
   10          | type . ID BRACKET_L param BRACKET_R BRACE_L funbody BRACE_R
   33 vardecs: type . ID LET expr SEMICOLON
   34        | type . ID SEMICOLON

    ID  shift, and go to state 132


State 88

    9 fundefdec: type ID BRACKET_L BRACKET_R BRACE_L funbody . BRACE_R

    BRACE_R  shift, and go to state 133


State 89

   24 funbody: vardecs . localfundefs statements
   25        | vardecs . localfundefs
   26        | vardecs . statements
   28        | vardecs .
   31 vardecs: vardecs . type ID LET expr SEMICOLON
   32        | vardecs . type ID SEMICOLON

    TYPE_BOOL   shift, and go to state 1
    TYPE_INT    shift, and go to state 2
    TYPE_VOID   shift, and go to state 3
    TYPE_FLOAT  shift, and go to state 4
    DO          shift, and go to state 78
    WHILE       shift, and go to state 79
    FOR         shift, and go to state 80
    IF          shift, and go to state 81
    RETURN      shift, and go to state 82
    EXTERN      shift, and go to state 83
    EXPORT      shift, and go to state 84
    ID          shift, and go to state 85

    $default  reduce using rule 28 (funbody)

    fundefdec     go to state 86
    type          go to state 134
    localfundefs  go to state 135
    statements    go to state 136
    stmt          go to state 92
    for           go to state 93
    if            go to state 94
    funcall       go to state 95


State 90

   27 funbody: localfundefs . statements
   29        | localfundefs .

    DO      shift, and go to state 78
    WHILE   shift, and go to state 79
    FOR     shift, and go to state 80
    IF      shift, and go to state 81
    RETURN  shift, and go to state 82
    ID      shift, and go to state 85

    $default  reduce using rule 29 (funbody)

    statements  go to state 137
    stmt        go to state 92
    for         go to state 93
    if          go to state 94
    funcall     go to state 95


State 91

   30 funbody: statements .

    $default  reduce using rule 30 (funbody)


State 92

   37 statements: stmt . statements
   38           | stmt .

    DO      shift, and go to state 78
    WHILE   shift, and go to state 79
    FOR     shift, and go to state 80
    IF      shift, and go to state 81
    RETURN  shift, and go to state 82
    ID      shift, and go to state 85

    $default  reduce using rule 38 (statements)

    statements  go to state 138
    stmt        go to state 92
    for         go to state 93
    if          go to state 94
    funcall     go to state 95


State 93

   44 stmt: for .

    $default  reduce using rule 44 (stmt)


State 94

   43 stmt: if .

    $default  reduce using rule 43 (stmt)


State 95

   40 stmt: funcall . SEMICOLON

    SEMICOLON  shift, and go to state 139


State 96

   10 fundefdec: type ID BRACKET_L param BRACKET_R BRACE_L . funbody BRACE_R

    TYPE_BOOL   shift, and go to state 1
    TYPE_INT    shift, and go to state 2
    TYPE_VOID   shift, and go to state 3
    TYPE_FLOAT  shift, and go to state 4
    DO          shift, and go to state 78
    WHILE       shift, and go to state 79
    FOR         shift, and go to state 80
    IF          shift, and go to state 81
    RETURN      shift, and go to state 82
    EXTERN      shift, and go to state 83
    EXPORT      shift, and go to state 84
    ID          shift, and go to state 85

    fundefdec     go to state 86
    type          go to state 87
    funbody       go to state 140
    vardecs       go to state 89
    localfundefs  go to state 90
    statements    go to state 91
    stmt          go to state 92
    for           go to state 93
    if            go to state 94
    funcall       go to state 95


State 97

   18 param: type var COMMA . param

    TYPE_BOOL   shift, and go to state 1
    TYPE_INT    shift, and go to state 2
    TYPE_VOID   shift, and go to state 3
    TYPE_FLOAT  shift, and go to state 4

    param  go to state 141
    type   go to state 31


State 98

   65 cast: BRACKET_L type BRACKET_R . expr

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 142
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 99

   55 expr: BRACKET_L expr BRACKET_R .

    $default  reduce using rule 55 (expr)


State 100

   66 funcall: ID BRACKET_L BRACKET_R .

    $default  reduce using rule 66 (funcall)


State 101

   67 funcall: ID BRACKET_L exprs . BRACKET_R

    BRACKET_R  shift, and go to state 143


State 102

   53 exprs: expr . COMMA exprs
   54      | expr .
   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    COMMA    shift, and go to state 144
    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    STAR     shift, and go to state 62
    SLASH    shift, and go to state 63
    PERCENT  shift, and go to state 64
    LE       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    GT       shift, and go to state 68
    EQ       shift, and go to state 69
    NE       shift, and go to state 70
    AND      shift, and go to state 71
    OR       shift, and go to state 72

    $default  reduce using rule 54 (exprs)


State 103

   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   71      | expr MINUS expr .
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    $default  reduce using rule 71 (binop)


State 104

   70 binop: expr . PLUS expr
   70      | expr PLUS expr .
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    $default  reduce using rule 70 (binop)


State 105

   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   72      | expr STAR expr .
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    $default  reduce using rule 72 (binop)


State 106

   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   73      | expr SLASH expr .
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    $default  reduce using rule 73 (binop)


State 107

   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   74      | expr PERCENT expr .
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    $default  reduce using rule 74 (binop)


State 108

   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   75      | expr LE expr .
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    $default  reduce using rule 75 (binop)


State 109

   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   76      | expr LT expr .
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    $default  reduce using rule 76 (binop)


State 110

   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   77      | expr GE expr .
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    $default  reduce using rule 77 (binop)


State 111

   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   78      | expr GT expr .
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    $default  reduce using rule 78 (binop)


State 112

   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   79      | expr EQ expr .
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    $default  reduce using rule 79 (binop)


State 113

   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   80      | expr NE expr .
   81      | expr . OR expr
   82      | expr . AND expr

    $default  reduce using rule 80 (binop)


State 114

   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr
   82      | expr AND expr .

    $default  reduce using rule 82 (binop)


State 115

   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   81      | expr OR expr .
   82      | expr . AND expr

    $default  reduce using rule 81 (binop)


State 116

   12 fundefdec: EXTERN type ID BRACKET_L param BRACKET_R SEMICOLON .

    $default  reduce using rule 12 (fundefdec)


State 117

    7 fundefdec: EXPORT type ID BRACKET_L BRACKET_R BRACE_L funbody . BRACE_R

    BRACE_R  shift, and go to state 145


State 118

    8 fundefdec: EXPORT type ID BRACKET_L BRACKET_R param BRACE_L . funbody BRACE_R

    TYPE_BOOL   shift, and go to state 1
    TYPE_INT    shift, and go to state 2
    TYPE_VOID   shift, and go to state 3
    TYPE_FLOAT  shift, and go to state 4
    DO          shift, and go to state 78
    WHILE       shift, and go to state 79
    FOR         shift, and go to state 80
    IF          shift, and go to state 81
    RETURN      shift, and go to state 82
    EXTERN      shift, and go to state 83
    EXPORT      shift, and go to state 84
    ID          shift, and go to state 85

    fundefdec     go to state 86
    type          go to state 87
    funbody       go to state 146
    vardecs       go to state 89
    localfundefs  go to state 90
    statements    go to state 91
    stmt          go to state 92
    for           go to state 93
    if            go to state 94
    funcall       go to state 95


State 119

   51 block: BRACE_L . statements BRACE_R

    DO      shift, and go to state 78
    WHILE   shift, and go to state 79
    FOR     shift, and go to state 80
    IF      shift, and go to state 81
    RETURN  shift, and go to state 82
    ID      shift, and go to state 85

    statements  go to state 147
    stmt        go to state 92
    for         go to state 93
    if          go to state 94
    funcall     go to state 95


State 120

   52 block: stmt .

    $default  reduce using rule 52 (block)


State 121

   42 stmt: DO block . WHILE BRACKET_L expr BRACKET_R SEMICOLON

    WHILE  shift, and go to state 148


State 122

   41 stmt: WHILE BRACKET_L . expr BRACKET_R block

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 149
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 123

   47 for: FOR BRACKET_L . TYPE_INT ID LET expr COMMA expr COMMA expr BRACKET_R block
   48    | FOR BRACKET_L . TYPE_INT ID LET expr COMMA expr BRACKET_R block

    TYPE_INT  shift, and go to state 150


State 124

   49 if: IF BRACKET_L . expr BRACKET_R block ELSE block
   50   | IF BRACKET_L . expr BRACKET_R block

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 151
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 125

   46 stmt: RETURN SEMICOLON .

    $default  reduce using rule 46 (stmt)


State 126

   45 stmt: RETURN expr . SEMICOLON
   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    SEMICOLON  shift, and go to state 152
    MINUS      shift, and go to state 60
    PLUS       shift, and go to state 61
    STAR       shift, and go to state 62
    SLASH      shift, and go to state 63
    PERCENT    shift, and go to state 64
    LE         shift, and go to state 65
    LT         shift, and go to state 66
    GE         shift, and go to state 67
    GT         shift, and go to state 68
    EQ         shift, and go to state 69
    NE         shift, and go to state 70
    AND        shift, and go to state 71
    OR         shift, and go to state 72


State 127

   11 fundefdec: EXTERN type . ID BRACKET_L BRACKET_R SEMICOLON
   12          | EXTERN type . ID BRACKET_L param BRACKET_R SEMICOLON

    ID  shift, and go to state 153


State 128

    7 fundefdec: EXPORT type . ID BRACKET_L BRACKET_R BRACE_L funbody BRACE_R
    8          | EXPORT type . ID BRACKET_L BRACKET_R param BRACE_L funbody BRACE_R

    ID  shift, and go to state 154


State 129

   39 stmt: ID LET . expr SEMICOLON

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 155
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 130

    9 fundefdec: type . ID BRACKET_L BRACKET_R BRACE_L funbody BRACE_R
   10          | type . ID BRACKET_L param BRACKET_R BRACE_L funbody BRACE_R

    ID  shift, and go to state 156


State 131

   35 localfundefs: fundefdec localfundefs .

    $default  reduce using rule 35 (localfundefs)


State 132

    9 fundefdec: type ID . BRACKET_L BRACKET_R BRACE_L funbody BRACE_R
   10          | type ID . BRACKET_L param BRACKET_R BRACE_L funbody BRACE_R
   33 vardecs: type ID . LET expr SEMICOLON
   34        | type ID . SEMICOLON

    BRACKET_L  shift, and go to state 21
    SEMICOLON  shift, and go to state 157
    LET        shift, and go to state 158


State 133

    9 fundefdec: type ID BRACKET_L BRACKET_R BRACE_L funbody BRACE_R .

    $default  reduce using rule 9 (fundefdec)


State 134

    9 fundefdec: type . ID BRACKET_L BRACKET_R BRACE_L funbody BRACE_R
   10          | type . ID BRACKET_L param BRACKET_R BRACE_L funbody BRACE_R
   31 vardecs: vardecs type . ID LET expr SEMICOLON
   32        | vardecs type . ID SEMICOLON

    ID  shift, and go to state 159


State 135

   24 funbody: vardecs localfundefs . statements
   25        | vardecs localfundefs .

    DO      shift, and go to state 78
    WHILE   shift, and go to state 79
    FOR     shift, and go to state 80
    IF      shift, and go to state 81
    RETURN  shift, and go to state 82
    ID      shift, and go to state 85

    $default  reduce using rule 25 (funbody)

    statements  go to state 160
    stmt        go to state 92
    for         go to state 93
    if          go to state 94
    funcall     go to state 95


State 136

   26 funbody: vardecs statements .

    $default  reduce using rule 26 (funbody)


State 137

   27 funbody: localfundefs statements .

    $default  reduce using rule 27 (funbody)


State 138

   37 statements: stmt statements .

    $default  reduce using rule 37 (statements)


State 139

   40 stmt: funcall SEMICOLON .

    $default  reduce using rule 40 (stmt)


State 140

   10 fundefdec: type ID BRACKET_L param BRACKET_R BRACE_L funbody . BRACE_R

    BRACE_R  shift, and go to state 161


State 141

   18 param: type var COMMA param .

    $default  reduce using rule 18 (param)


State 142

   65 cast: BRACKET_L type BRACKET_R expr .
   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    $default  reduce using rule 65 (cast)


State 143

   67 funcall: ID BRACKET_L exprs BRACKET_R .

    $default  reduce using rule 67 (funcall)


State 144

   53 exprs: expr COMMA . exprs

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    exprs    go to state 162
    expr     go to state 102
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 145

    7 fundefdec: EXPORT type ID BRACKET_L BRACKET_R BRACE_L funbody BRACE_R .

    $default  reduce using rule 7 (fundefdec)


State 146

    8 fundefdec: EXPORT type ID BRACKET_L BRACKET_R param BRACE_L funbody . BRACE_R

    BRACE_R  shift, and go to state 163


State 147

   51 block: BRACE_L statements . BRACE_R

    BRACE_R  shift, and go to state 164


State 148

   42 stmt: DO block WHILE . BRACKET_L expr BRACKET_R SEMICOLON

    BRACKET_L  shift, and go to state 165


State 149

   41 stmt: WHILE BRACKET_L expr . BRACKET_R block
   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    BRACKET_R  shift, and go to state 166
    MINUS      shift, and go to state 60
    PLUS       shift, and go to state 61
    STAR       shift, and go to state 62
    SLASH      shift, and go to state 63
    PERCENT    shift, and go to state 64
    LE         shift, and go to state 65
    LT         shift, and go to state 66
    GE         shift, and go to state 67
    GT         shift, and go to state 68
    EQ         shift, and go to state 69
    NE         shift, and go to state 70
    AND        shift, and go to state 71
    OR         shift, and go to state 72


State 150

   47 for: FOR BRACKET_L TYPE_INT . ID LET expr COMMA expr COMMA expr BRACKET_R block
   48    | FOR BRACKET_L TYPE_INT . ID LET expr COMMA expr BRACKET_R block

    ID  shift, and go to state 167


State 151

   49 if: IF BRACKET_L expr . BRACKET_R block ELSE block
   50   | IF BRACKET_L expr . BRACKET_R block
   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    BRACKET_R  shift, and go to state 168
    MINUS      shift, and go to state 60
    PLUS       shift, and go to state 61
    STAR       shift, and go to state 62
    SLASH      shift, and go to state 63
    PERCENT    shift, and go to state 64
    LE         shift, and go to state 65
    LT         shift, and go to state 66
    GE         shift, and go to state 67
    GT         shift, and go to state 68
    EQ         shift, and go to state 69
    NE         shift, and go to state 70
    AND        shift, and go to state 71
    OR         shift, and go to state 72


State 152

   45 stmt: RETURN expr SEMICOLON .

    $default  reduce using rule 45 (stmt)


State 153

   11 fundefdec: EXTERN type ID . BRACKET_L BRACKET_R SEMICOLON
   12          | EXTERN type ID . BRACKET_L param BRACKET_R SEMICOLON

    BRACKET_L  shift, and go to state 24


State 154

    7 fundefdec: EXPORT type ID . BRACKET_L BRACKET_R BRACE_L funbody BRACE_R
    8          | EXPORT type ID . BRACKET_L BRACKET_R param BRACE_L funbody BRACE_R

    BRACKET_L  shift, and go to state 26


State 155

   39 stmt: ID LET expr . SEMICOLON
   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    SEMICOLON  shift, and go to state 169
    MINUS      shift, and go to state 60
    PLUS       shift, and go to state 61
    STAR       shift, and go to state 62
    SLASH      shift, and go to state 63
    PERCENT    shift, and go to state 64
    LE         shift, and go to state 65
    LT         shift, and go to state 66
    GE         shift, and go to state 67
    GT         shift, and go to state 68
    EQ         shift, and go to state 69
    NE         shift, and go to state 70
    AND        shift, and go to state 71
    OR         shift, and go to state 72


State 156

    9 fundefdec: type ID . BRACKET_L BRACKET_R BRACE_L funbody BRACE_R
   10          | type ID . BRACKET_L param BRACKET_R BRACE_L funbody BRACE_R

    BRACKET_L  shift, and go to state 21


State 157

   34 vardecs: type ID SEMICOLON .

    $default  reduce using rule 34 (vardecs)


State 158

   33 vardecs: type ID LET . expr SEMICOLON

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 170
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 159

    9 fundefdec: type ID . BRACKET_L BRACKET_R BRACE_L funbody BRACE_R
   10          | type ID . BRACKET_L param BRACKET_R BRACE_L funbody BRACE_R
   31 vardecs: vardecs type ID . LET expr SEMICOLON
   32        | vardecs type ID . SEMICOLON

    BRACKET_L  shift, and go to state 21
    SEMICOLON  shift, and go to state 171
    LET        shift, and go to state 172


State 160

   24 funbody: vardecs localfundefs statements .

    $default  reduce using rule 24 (funbody)


State 161

   10 fundefdec: type ID BRACKET_L param BRACKET_R BRACE_L funbody BRACE_R .

    $default  reduce using rule 10 (fundefdec)


State 162

   53 exprs: expr COMMA exprs .

    $default  reduce using rule 53 (exprs)


State 163

    8 fundefdec: EXPORT type ID BRACKET_L BRACKET_R param BRACE_L funbody BRACE_R .

    $default  reduce using rule 8 (fundefdec)


State 164

   51 block: BRACE_L statements BRACE_R .

    $default  reduce using rule 51 (block)


State 165

   42 stmt: DO block WHILE BRACKET_L . expr BRACKET_R SEMICOLON

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 173
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 166

   41 stmt: WHILE BRACKET_L expr BRACKET_R . block

    BRACE_L  shift, and go to state 119
    DO       shift, and go to state 78
    WHILE    shift, and go to state 79
    FOR      shift, and go to state 80
    IF       shift, and go to state 81
    RETURN   shift, and go to state 82
    ID       shift, and go to state 85

    stmt     go to state 120
    for      go to state 93
    if       go to state 94
    block    go to state 174
    funcall  go to state 95


State 167

   47 for: FOR BRACKET_L TYPE_INT ID . LET expr COMMA expr COMMA expr BRACKET_R block
   48    | FOR BRACKET_L TYPE_INT ID . LET expr COMMA expr BRACKET_R block

    LET  shift, and go to state 175


State 168

   49 if: IF BRACKET_L expr BRACKET_R . block ELSE block
   50   | IF BRACKET_L expr BRACKET_R . block

    BRACE_L  shift, and go to state 119
    DO       shift, and go to state 78
    WHILE    shift, and go to state 79
    FOR      shift, and go to state 80
    IF       shift, and go to state 81
    RETURN   shift, and go to state 82
    ID       shift, and go to state 85

    stmt     go to state 120
    for      go to state 93
    if       go to state 94
    block    go to state 176
    funcall  go to state 95


State 169

   39 stmt: ID LET expr SEMICOLON .

    $default  reduce using rule 39 (stmt)


State 170

   33 vardecs: type ID LET expr . SEMICOLON
   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    SEMICOLON  shift, and go to state 177
    MINUS      shift, and go to state 60
    PLUS       shift, and go to state 61
    STAR       shift, and go to state 62
    SLASH      shift, and go to state 63
    PERCENT    shift, and go to state 64
    LE         shift, and go to state 65
    LT         shift, and go to state 66
    GE         shift, and go to state 67
    GT         shift, and go to state 68
    EQ         shift, and go to state 69
    NE         shift, and go to state 70
    AND        shift, and go to state 71
    OR         shift, and go to state 72


State 171

   32 vardecs: vardecs type ID SEMICOLON .

    $default  reduce using rule 32 (vardecs)


State 172

   31 vardecs: vardecs type ID LET . expr SEMICOLON

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 178
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 173

   42 stmt: DO block WHILE BRACKET_L expr . BRACKET_R SEMICOLON
   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    BRACKET_R  shift, and go to state 179
    MINUS      shift, and go to state 60
    PLUS       shift, and go to state 61
    STAR       shift, and go to state 62
    SLASH      shift, and go to state 63
    PERCENT    shift, and go to state 64
    LE         shift, and go to state 65
    LT         shift, and go to state 66
    GE         shift, and go to state 67
    GT         shift, and go to state 68
    EQ         shift, and go to state 69
    NE         shift, and go to state 70
    AND        shift, and go to state 71
    OR         shift, and go to state 72


State 174

   41 stmt: WHILE BRACKET_L expr BRACKET_R block .

    $default  reduce using rule 41 (stmt)


State 175

   47 for: FOR BRACKET_L TYPE_INT ID LET . expr COMMA expr COMMA expr BRACKET_R block
   48    | FOR BRACKET_L TYPE_INT ID LET . expr COMMA expr BRACKET_R block

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 180
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 176

   49 if: IF BRACKET_L expr BRACKET_R block . ELSE block
   50   | IF BRACKET_L expr BRACKET_R block .

    ELSE  shift, and go to state 181

    ELSE      [reduce using rule 50 (if)]
    $default  reduce using rule 50 (if)


State 177

   33 vardecs: type ID LET expr SEMICOLON .

    $default  reduce using rule 33 (vardecs)


State 178

   31 vardecs: vardecs type ID LET expr . SEMICOLON
   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    SEMICOLON  shift, and go to state 182
    MINUS      shift, and go to state 60
    PLUS       shift, and go to state 61
    STAR       shift, and go to state 62
    SLASH      shift, and go to state 63
    PERCENT    shift, and go to state 64
    LE         shift, and go to state 65
    LT         shift, and go to state 66
    GE         shift, and go to state 67
    GT         shift, and go to state 68
    EQ         shift, and go to state 69
    NE         shift, and go to state 70
    AND        shift, and go to state 71
    OR         shift, and go to state 72


State 179

   42 stmt: DO block WHILE BRACKET_L expr BRACKET_R . SEMICOLON

    SEMICOLON  shift, and go to state 183


State 180

   47 for: FOR BRACKET_L TYPE_INT ID LET expr . COMMA expr COMMA expr BRACKET_R block
   48    | FOR BRACKET_L TYPE_INT ID LET expr . COMMA expr BRACKET_R block
   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    COMMA    shift, and go to state 184
    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    STAR     shift, and go to state 62
    SLASH    shift, and go to state 63
    PERCENT  shift, and go to state 64
    LE       shift, and go to state 65
    LT       shift, and go to state 66
    GE       shift, and go to state 67
    GT       shift, and go to state 68
    EQ       shift, and go to state 69
    NE       shift, and go to state 70
    AND      shift, and go to state 71
    OR       shift, and go to state 72


State 181

   49 if: IF BRACKET_L expr BRACKET_R block ELSE . block

    BRACE_L  shift, and go to state 119
    DO       shift, and go to state 78
    WHILE    shift, and go to state 79
    FOR      shift, and go to state 80
    IF       shift, and go to state 81
    RETURN   shift, and go to state 82
    ID       shift, and go to state 85

    stmt     go to state 120
    for      go to state 93
    if       go to state 94
    block    go to state 185
    funcall  go to state 95


State 182

   31 vardecs: vardecs type ID LET expr SEMICOLON .

    $default  reduce using rule 31 (vardecs)


State 183

   42 stmt: DO block WHILE BRACKET_L expr BRACKET_R SEMICOLON .

    $default  reduce using rule 42 (stmt)


State 184

   47 for: FOR BRACKET_L TYPE_INT ID LET expr COMMA . expr COMMA expr BRACKET_R block
   48    | FOR BRACKET_L TYPE_INT ID LET expr COMMA . expr BRACKET_R block

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 186
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 185

   49 if: IF BRACKET_L expr BRACKET_R block ELSE block .

    $default  reduce using rule 49 (if)


State 186

   47 for: FOR BRACKET_L TYPE_INT ID LET expr COMMA expr . COMMA expr BRACKET_R block
   48    | FOR BRACKET_L TYPE_INT ID LET expr COMMA expr . BRACKET_R block
   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    BRACKET_R  shift, and go to state 187
    COMMA      shift, and go to state 188
    MINUS      shift, and go to state 60
    PLUS       shift, and go to state 61
    STAR       shift, and go to state 62
    SLASH      shift, and go to state 63
    PERCENT    shift, and go to state 64
    LE         shift, and go to state 65
    LT         shift, and go to state 66
    GE         shift, and go to state 67
    GT         shift, and go to state 68
    EQ         shift, and go to state 69
    NE         shift, and go to state 70
    AND        shift, and go to state 71
    OR         shift, and go to state 72


State 187

   48 for: FOR BRACKET_L TYPE_INT ID LET expr COMMA expr BRACKET_R . block

    BRACE_L  shift, and go to state 119
    DO       shift, and go to state 78
    WHILE    shift, and go to state 79
    FOR      shift, and go to state 80
    IF       shift, and go to state 81
    RETURN   shift, and go to state 82
    ID       shift, and go to state 85

    stmt     go to state 120
    for      go to state 93
    if       go to state 94
    block    go to state 189
    funcall  go to state 95


State 188

   47 for: FOR BRACKET_L TYPE_INT ID LET expr COMMA expr COMMA . expr BRACKET_R block

    BRACKET_L  shift, and go to state 32
    MINUS      shift, and go to state 33
    NOT        shift, and go to state 34
    TRUEVAL    shift, and go to state 35
    FALSEVAL   shift, and go to state 36
    NUM        shift, and go to state 37
    FLOAT      shift, and go to state 38
    ID         shift, and go to state 39

    expr     go to state 190
    cast     go to state 41
    funcall  go to state 42
    monop    go to state 43
    binop    go to state 44
    var      go to state 45


State 189

   48 for: FOR BRACKET_L TYPE_INT ID LET expr COMMA expr BRACKET_R block .

    $default  reduce using rule 48 (for)


State 190

   47 for: FOR BRACKET_L TYPE_INT ID LET expr COMMA expr COMMA expr . BRACKET_R block
   70 binop: expr . PLUS expr
   71      | expr . MINUS expr
   72      | expr . STAR expr
   73      | expr . SLASH expr
   74      | expr . PERCENT expr
   75      | expr . LE expr
   76      | expr . LT expr
   77      | expr . GE expr
   78      | expr . GT expr
   79      | expr . EQ expr
   80      | expr . NE expr
   81      | expr . OR expr
   82      | expr . AND expr

    BRACKET_R  shift, and go to state 191
    MINUS      shift, and go to state 60
    PLUS       shift, and go to state 61
    STAR       shift, and go to state 62
    SLASH      shift, and go to state 63
    PERCENT    shift, and go to state 64
    LE         shift, and go to state 65
    LT         shift, and go to state 66
    GE         shift, and go to state 67
    GT         shift, and go to state 68
    EQ         shift, and go to state 69
    NE         shift, and go to state 70
    AND        shift, and go to state 71
    OR         shift, and go to state 72


State 191

   47 for: FOR BRACKET_L TYPE_INT ID LET expr COMMA expr COMMA expr BRACKET_R . block

    BRACE_L  shift, and go to state 119
    DO       shift, and go to state 78
    WHILE    shift, and go to state 79
    FOR      shift, and go to state 80
    IF       shift, and go to state 81
    RETURN   shift, and go to state 82
    ID       shift, and go to state 85

    stmt     go to state 120
    for      go to state 93
    if       go to state 94
    block    go to state 192
    funcall  go to state 95


State 192

   47 for: FOR BRACKET_L TYPE_INT ID LET expr COMMA expr COMMA expr BRACKET_R block .

    $default  reduce using rule 47 (for)
